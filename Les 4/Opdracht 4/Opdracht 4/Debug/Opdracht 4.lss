
Opdracht 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000007ac  00000820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000082a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000888  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d18  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009ec  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000059a  00000000  00000000  00002048  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  000025e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f9  00000000  00000000  000026ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000030b  00000000  00000000  00002be5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002ef0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ea       	ldi	r30, 0xAC	; 172
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	60 d0       	rcall	.+192    	; 0x174 <main>
  b4:	79 c3       	rjmp	.+1778   	; 0x7a8 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
		lcd_write_cmd(0x80 + position);
}


void lcd_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);	// E high
  b8:	85 b3       	in	r24, 0x15	; 21
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	8f ec       	ldi	r24, 0xCF	; 207
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_strobe_lcd_e+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_strobe_lcd_e+0x10>
  c8:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTC &= ~(1<<LCD_E);  	// E low
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	87 7f       	andi	r24, 0xF7	; 247
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	8f ec       	ldi	r24, 0xCF	; 207
  d2:	97 e0       	ldi	r25, 0x07	; 7
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_strobe_lcd_e+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_strobe_lcd_e+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <lcd_write_cmd>:
	lcd_display_text(str);
}
	


void lcd_write_cmd(unsigned char byte) {
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte & 0xf0;
  e2:	80 7f       	andi	r24, 0xF0	; 240
  e4:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
  e6:	e8 df       	rcall	.-48     	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
  e8:	c2 95       	swap	r28
  ea:	c0 7f       	andi	r28, 0xF0	; 240
	lcd_strobe_lcd_e();
  ec:	c5 bb       	out	0x15, r28	; 21
  ee:	e4 df       	rcall	.-56     	; 0xb8 <lcd_strobe_lcd_e>
}
  f0:	cf 91       	pop	r28
  f2:	08 95       	ret

000000f4 <lcd_init>:

	
void lcd_init(void)
{

	DDRC = 0xFF;
  f4:	8f ef       	ldi	r24, 0xFF	; 255
  f6:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  f8:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12), set interface data-lenght, and amount of lines
	lcd_write_cmd(0x28);
  fa:	88 e2       	ldi	r24, 0x28	; 40
  fc:	f0 df       	rcall	.-32     	; 0xde <lcd_write_cmd>
	
	// Step 3, clear display
	lcd_write_cmd(0x01);
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	ee df       	rcall	.-36     	; 0xde <lcd_write_cmd>

	// Step 4 (table 12), turn on display
	lcd_write_cmd(0x0C);
 102:	8c e0       	ldi	r24, 0x0C	; 12
 104:	ec df       	rcall	.-40     	; 0xde <lcd_write_cmd>

	// Set cursor
	lcd_write_cmd(0x0F);
 106:	8f e0       	ldi	r24, 0x0F	; 15
 108:	ea cf       	rjmp	.-44     	; 0xde <lcd_write_cmd>
 10a:	08 95       	ret

0000010c <lcd_set_cursor>:
 10c:	80 58       	subi	r24, 0x80	; 128
	}
}

void lcd_set_cursor(int position)
{	
		lcd_write_cmd(0x80 + position);
 10e:	e7 cf       	rjmp	.-50     	; 0xde <lcd_write_cmd>
 110:	08 95       	ret

00000112 <lcd_write_data>:

	// Second nibble
	PORTC = (byte<<4);
	lcd_strobe_lcd_e();
}
void lcd_write_data(unsigned char byte) {
 112:	cf 93       	push	r28
 114:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte & 0xf0;
 116:	80 7f       	andi	r24, 0xF0	; 240
 118:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 11a:	85 b3       	in	r24, 0x15	; 21
 11c:	84 60       	ori	r24, 0x04	; 4
 11e:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 120:	cb df       	rcall	.-106    	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 122:	c2 95       	swap	r28
 124:	c0 7f       	andi	r28, 0xF0	; 240
 126:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 128:	85 b3       	in	r24, 0x15	; 21
 12a:	84 60       	ori	r24, 0x04	; 4
	lcd_strobe_lcd_e();
 12c:	85 bb       	out	0x15, r24	; 21
 12e:	c4 df       	rcall	.-120    	; 0xb8 <lcd_strobe_lcd_e>
}
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <lcd_display_text>:
	// Set cursor
	lcd_write_cmd(0x0F);
}

void lcd_display_text(char *str)
{
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ec 01       	movw	r28, r24
	for(;*str; str++){
 13a:	02 c0       	rjmp	.+4      	; 0x140 <lcd_display_text+0xc>
		lcd_write_data(*str);
 13c:	ea df       	rcall	.-44     	; 0x112 <lcd_write_data>
	lcd_write_cmd(0x0F);
}

void lcd_display_text(char *str)
{
	for(;*str; str++){
 13e:	21 96       	adiw	r28, 0x01	; 1
 140:	88 81       	ld	r24, Y
 142:	81 11       	cpse	r24, r1
 144:	fb cf       	rjmp	.-10     	; 0x13c <lcd_display_text+0x8>
		lcd_write_data(*str);
	}
}
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <wait>:

// wait(): busy waiting for 'ms' millisecond
// Used library: util/delay.h
void wait( int ms )
{
	for (int tms=0; tms<ms; tms++)
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	08 c0       	rjmp	.+16     	; 0x162 <wait+0x16>
 152:	ef ec       	ldi	r30, 0xCF	; 207
 154:	f7 e0       	ldi	r31, 0x07	; 7
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <wait+0xa>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <wait+0x10>
 15c:	00 00       	nop
 15e:	2f 5f       	subi	r18, 0xFF	; 255
 160:	3f 4f       	sbci	r19, 0xFF	; 255
 162:	28 17       	cp	r18, r24
 164:	39 07       	cpc	r19, r25
 166:	ac f3       	brlt	.-22     	; 0x152 <wait+0x6>
	{
		_delay_ms( 1 );			// library function (max 30 ms at 8MHz)
	}
}
 168:	08 95       	ret

0000016a <adcInit>:


// Initialize ADC: 10-bits (left justified), free running
void adcInit( void )
{
	ADMUX = 0b11100011;			// AREF=VCC, result left adjusted, channel1 at pin PF1, ADLAR = 1
 16a:	83 ee       	ldi	r24, 0xE3	; 227
 16c:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110;		// ADC-enable, no interrupt, not start, free running off, division by 64
 16e:	86 e8       	ldi	r24, 0x86	; 134
 170:	86 b9       	out	0x06, r24	; 6
 172:	08 95       	ret

00000174 <main>:
}


// Main program: ADC at PF1
int main( void )
{
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	64 97       	sbiw	r28, 0x14	; 20
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	f8 94       	cli
 182:	de bf       	out	0x3e, r29	; 62
 184:	0f be       	out	0x3f, r0	; 63
 186:	cd bf       	out	0x3d, r28	; 61
	DDRF = 0x00;				// set PORTF for input (ADC)
 188:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRA = 0xFF;				// set PORTA for output
 18c:	1f ef       	ldi	r17, 0xFF	; 255
 18e:	1a bb       	out	0x1a, r17	; 26
	DDRB = 0x00;				// set PORTB for input
 190:	17 ba       	out	0x17, r1	; 23
	adcInit();					// initialize ADC
 192:	eb df       	rcall	.-42     	; 0x16a <adcInit>
	
	DDRD = 0xFF;

	lcd_init();
 194:	11 bb       	out	0x11, r17	; 17

	lcd_write_cmd(0x01);
 196:	ae df       	rcall	.-164    	; 0xf4 <lcd_init>
 198:	81 e0       	ldi	r24, 0x01	; 1
	lcd_set_cursor(42);
 19a:	a1 df       	rcall	.-190    	; 0xde <lcd_write_cmd>
 19c:	8a e2       	ldi	r24, 0x2A	; 42
 19e:	90 e0       	ldi	r25, 0x00	; 0
	lcd_display_text("brood");
 1a0:	b5 df       	rcall	.-150    	; 0x10c <lcd_set_cursor>
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	91 e0       	ldi	r25, 0x01	; 1

	while (1)
	{
		// ADC Start Conversion
		//if (PINB & BIT(0)){
		lcd_write_cmd(0x01);
 1a6:	c6 df       	rcall	.-116    	; 0x134 <lcd_display_text>
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	99 df       	rcall	.-206    	; 0xde <lcd_write_cmd>
		ADCSRA |= (1<<ADSC);
 1ac:	86 b1       	in	r24, 0x06	; 6
 1ae:	80 64       	ori	r24, 0x40	; 64
 1b0:	86 b9       	out	0x06, r24	; 6
		sprintf(buffer, "%d", ADCH);
 1b2:	85 b1       	in	r24, 0x05	; 5
 1b4:	1f 92       	push	r1
 1b6:	8f 93       	push	r24
 1b8:	86 e0       	ldi	r24, 0x06	; 6
 1ba:	91 e0       	ldi	r25, 0x01	; 1
 1bc:	9f 93       	push	r25
 1be:	8f 93       	push	r24
 1c0:	8e 01       	movw	r16, r28
 1c2:	0f 5f       	subi	r16, 0xFF	; 255
 1c4:	1f 4f       	sbci	r17, 0xFF	; 255
 1c6:	1f 93       	push	r17
		lcd_set_cursor(2);
 1c8:	0f 93       	push	r16
 1ca:	13 d0       	rcall	.+38     	; 0x1f2 <sprintf>
 1cc:	82 e0       	ldi	r24, 0x02	; 2
		lcd_display_text(buffer);
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	9d df       	rcall	.-198    	; 0x10c <lcd_set_cursor>
 1d2:	c8 01       	movw	r24, r16
		wait(75);
 1d4:	af df       	rcall	.-162    	; 0x134 <lcd_display_text>
 1d6:	8b e4       	ldi	r24, 0x4B	; 75
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	b8 df       	rcall	.-144    	; 0x14c <wait>
		
		
		//}

		// Wait for conversion to complete
		while (ADCSRA & (1<<ADSC));
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	36 99       	sbic	0x06, 6	; 6
 1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <main+0x74>

		//PORTA = ADCL;
		PORTA = ADCH;
 1ec:	85 b1       	in	r24, 0x05	; 5
 1ee:	8b bb       	out	0x1b, r24	; 27
	}
 1f0:	db cf       	rjmp	.-74     	; 0x1a8 <main+0x34>

000001f2 <sprintf>:
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	2e 97       	sbiw	r28, 0x0e	; 14
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	de bf       	out	0x3e, r29	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	cd bf       	out	0x3d, r28	; 61
 20a:	0d 89       	ldd	r16, Y+21	; 0x15
 20c:	1e 89       	ldd	r17, Y+22	; 0x16
 20e:	86 e0       	ldi	r24, 0x06	; 6
 210:	8c 83       	std	Y+4, r24	; 0x04
 212:	1a 83       	std	Y+2, r17	; 0x02
 214:	09 83       	std	Y+1, r16	; 0x01
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	9f e7       	ldi	r25, 0x7F	; 127
 21a:	9e 83       	std	Y+6, r25	; 0x06
 21c:	8d 83       	std	Y+5, r24	; 0x05
 21e:	ae 01       	movw	r20, r28
 220:	47 5e       	subi	r20, 0xE7	; 231
 222:	5f 4f       	sbci	r21, 0xFF	; 255
 224:	6f 89       	ldd	r22, Y+23	; 0x17
 226:	78 8d       	ldd	r23, Y+24	; 0x18
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	10 d0       	rcall	.+32     	; 0x24e <vfprintf>
 22e:	ef 81       	ldd	r30, Y+7	; 0x07
 230:	f8 85       	ldd	r31, Y+8	; 0x08
 232:	e0 0f       	add	r30, r16
 234:	f1 1f       	adc	r31, r17
 236:	10 82       	st	Z, r1
 238:	2e 96       	adiw	r28, 0x0e	; 14
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
 244:	df 91       	pop	r29
 246:	cf 91       	pop	r28
 248:	1f 91       	pop	r17
 24a:	0f 91       	pop	r16
 24c:	08 95       	ret

0000024e <vfprintf>:
 24e:	2f 92       	push	r2
 250:	3f 92       	push	r3
 252:	4f 92       	push	r4
 254:	5f 92       	push	r5
 256:	6f 92       	push	r6
 258:	7f 92       	push	r7
 25a:	8f 92       	push	r8
 25c:	9f 92       	push	r9
 25e:	af 92       	push	r10
 260:	bf 92       	push	r11
 262:	cf 92       	push	r12
 264:	df 92       	push	r13
 266:	ef 92       	push	r14
 268:	ff 92       	push	r15
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	2b 97       	sbiw	r28, 0x0b	; 11
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	6c 01       	movw	r12, r24
 284:	7b 01       	movw	r14, r22
 286:	8a 01       	movw	r16, r20
 288:	fc 01       	movw	r30, r24
 28a:	17 82       	std	Z+7, r1	; 0x07
 28c:	16 82       	std	Z+6, r1	; 0x06
 28e:	83 81       	ldd	r24, Z+3	; 0x03
 290:	81 ff       	sbrs	r24, 1
 292:	bf c1       	rjmp	.+894    	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	3c 01       	movw	r6, r24
 29a:	f6 01       	movw	r30, r12
 29c:	93 81       	ldd	r25, Z+3	; 0x03
 29e:	f7 01       	movw	r30, r14
 2a0:	93 fd       	sbrc	r25, 3
 2a2:	85 91       	lpm	r24, Z+
 2a4:	93 ff       	sbrs	r25, 3
 2a6:	81 91       	ld	r24, Z+
 2a8:	7f 01       	movw	r14, r30
 2aa:	88 23       	and	r24, r24
 2ac:	09 f4       	brne	.+2      	; 0x2b0 <vfprintf+0x62>
 2ae:	ad c1       	rjmp	.+858    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	39 f4       	brne	.+14     	; 0x2c2 <vfprintf+0x74>
 2b4:	93 fd       	sbrc	r25, 3
 2b6:	85 91       	lpm	r24, Z+
 2b8:	93 ff       	sbrs	r25, 3
 2ba:	81 91       	ld	r24, Z+
 2bc:	7f 01       	movw	r14, r30
 2be:	85 32       	cpi	r24, 0x25	; 37
 2c0:	21 f4       	brne	.+8      	; 0x2ca <vfprintf+0x7c>
 2c2:	b6 01       	movw	r22, r12
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	d6 d1       	rcall	.+940    	; 0x674 <fputc>
 2c8:	e8 cf       	rjmp	.-48     	; 0x29a <vfprintf+0x4c>
 2ca:	91 2c       	mov	r9, r1
 2cc:	21 2c       	mov	r2, r1
 2ce:	31 2c       	mov	r3, r1
 2d0:	ff e1       	ldi	r31, 0x1F	; 31
 2d2:	f3 15       	cp	r31, r3
 2d4:	d8 f0       	brcs	.+54     	; 0x30c <vfprintf+0xbe>
 2d6:	8b 32       	cpi	r24, 0x2B	; 43
 2d8:	79 f0       	breq	.+30     	; 0x2f8 <vfprintf+0xaa>
 2da:	38 f4       	brcc	.+14     	; 0x2ea <vfprintf+0x9c>
 2dc:	80 32       	cpi	r24, 0x20	; 32
 2de:	79 f0       	breq	.+30     	; 0x2fe <vfprintf+0xb0>
 2e0:	83 32       	cpi	r24, 0x23	; 35
 2e2:	a1 f4       	brne	.+40     	; 0x30c <vfprintf+0xbe>
 2e4:	23 2d       	mov	r18, r3
 2e6:	20 61       	ori	r18, 0x10	; 16
 2e8:	1d c0       	rjmp	.+58     	; 0x324 <vfprintf+0xd6>
 2ea:	8d 32       	cpi	r24, 0x2D	; 45
 2ec:	61 f0       	breq	.+24     	; 0x306 <vfprintf+0xb8>
 2ee:	80 33       	cpi	r24, 0x30	; 48
 2f0:	69 f4       	brne	.+26     	; 0x30c <vfprintf+0xbe>
 2f2:	23 2d       	mov	r18, r3
 2f4:	21 60       	ori	r18, 0x01	; 1
 2f6:	16 c0       	rjmp	.+44     	; 0x324 <vfprintf+0xd6>
 2f8:	83 2d       	mov	r24, r3
 2fa:	82 60       	ori	r24, 0x02	; 2
 2fc:	38 2e       	mov	r3, r24
 2fe:	e3 2d       	mov	r30, r3
 300:	e4 60       	ori	r30, 0x04	; 4
 302:	3e 2e       	mov	r3, r30
 304:	2a c0       	rjmp	.+84     	; 0x35a <vfprintf+0x10c>
 306:	f3 2d       	mov	r31, r3
 308:	f8 60       	ori	r31, 0x08	; 8
 30a:	1d c0       	rjmp	.+58     	; 0x346 <vfprintf+0xf8>
 30c:	37 fc       	sbrc	r3, 7
 30e:	2d c0       	rjmp	.+90     	; 0x36a <vfprintf+0x11c>
 310:	20 ed       	ldi	r18, 0xD0	; 208
 312:	28 0f       	add	r18, r24
 314:	2a 30       	cpi	r18, 0x0A	; 10
 316:	40 f0       	brcs	.+16     	; 0x328 <vfprintf+0xda>
 318:	8e 32       	cpi	r24, 0x2E	; 46
 31a:	b9 f4       	brne	.+46     	; 0x34a <vfprintf+0xfc>
 31c:	36 fc       	sbrc	r3, 6
 31e:	75 c1       	rjmp	.+746    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 320:	23 2d       	mov	r18, r3
 322:	20 64       	ori	r18, 0x40	; 64
 324:	32 2e       	mov	r3, r18
 326:	19 c0       	rjmp	.+50     	; 0x35a <vfprintf+0x10c>
 328:	36 fe       	sbrs	r3, 6
 32a:	06 c0       	rjmp	.+12     	; 0x338 <vfprintf+0xea>
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	98 9e       	mul	r9, r24
 330:	20 0d       	add	r18, r0
 332:	11 24       	eor	r1, r1
 334:	92 2e       	mov	r9, r18
 336:	11 c0       	rjmp	.+34     	; 0x35a <vfprintf+0x10c>
 338:	ea e0       	ldi	r30, 0x0A	; 10
 33a:	2e 9e       	mul	r2, r30
 33c:	20 0d       	add	r18, r0
 33e:	11 24       	eor	r1, r1
 340:	22 2e       	mov	r2, r18
 342:	f3 2d       	mov	r31, r3
 344:	f0 62       	ori	r31, 0x20	; 32
 346:	3f 2e       	mov	r3, r31
 348:	08 c0       	rjmp	.+16     	; 0x35a <vfprintf+0x10c>
 34a:	8c 36       	cpi	r24, 0x6C	; 108
 34c:	21 f4       	brne	.+8      	; 0x356 <vfprintf+0x108>
 34e:	83 2d       	mov	r24, r3
 350:	80 68       	ori	r24, 0x80	; 128
 352:	38 2e       	mov	r3, r24
 354:	02 c0       	rjmp	.+4      	; 0x35a <vfprintf+0x10c>
 356:	88 36       	cpi	r24, 0x68	; 104
 358:	41 f4       	brne	.+16     	; 0x36a <vfprintf+0x11c>
 35a:	f7 01       	movw	r30, r14
 35c:	93 fd       	sbrc	r25, 3
 35e:	85 91       	lpm	r24, Z+
 360:	93 ff       	sbrs	r25, 3
 362:	81 91       	ld	r24, Z+
 364:	7f 01       	movw	r14, r30
 366:	81 11       	cpse	r24, r1
 368:	b3 cf       	rjmp	.-154    	; 0x2d0 <vfprintf+0x82>
 36a:	98 2f       	mov	r25, r24
 36c:	9f 7d       	andi	r25, 0xDF	; 223
 36e:	95 54       	subi	r25, 0x45	; 69
 370:	93 30       	cpi	r25, 0x03	; 3
 372:	28 f4       	brcc	.+10     	; 0x37e <vfprintf+0x130>
 374:	0c 5f       	subi	r16, 0xFC	; 252
 376:	1f 4f       	sbci	r17, 0xFF	; 255
 378:	9f e3       	ldi	r25, 0x3F	; 63
 37a:	99 83       	std	Y+1, r25	; 0x01
 37c:	0d c0       	rjmp	.+26     	; 0x398 <vfprintf+0x14a>
 37e:	83 36       	cpi	r24, 0x63	; 99
 380:	31 f0       	breq	.+12     	; 0x38e <vfprintf+0x140>
 382:	83 37       	cpi	r24, 0x73	; 115
 384:	71 f0       	breq	.+28     	; 0x3a2 <vfprintf+0x154>
 386:	83 35       	cpi	r24, 0x53	; 83
 388:	09 f0       	breq	.+2      	; 0x38c <vfprintf+0x13e>
 38a:	55 c0       	rjmp	.+170    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 38c:	20 c0       	rjmp	.+64     	; 0x3ce <vfprintf+0x180>
 38e:	f8 01       	movw	r30, r16
 390:	80 81       	ld	r24, Z
 392:	89 83       	std	Y+1, r24	; 0x01
 394:	0e 5f       	subi	r16, 0xFE	; 254
 396:	1f 4f       	sbci	r17, 0xFF	; 255
 398:	88 24       	eor	r8, r8
 39a:	83 94       	inc	r8
 39c:	91 2c       	mov	r9, r1
 39e:	53 01       	movw	r10, r6
 3a0:	12 c0       	rjmp	.+36     	; 0x3c6 <vfprintf+0x178>
 3a2:	28 01       	movw	r4, r16
 3a4:	f2 e0       	ldi	r31, 0x02	; 2
 3a6:	4f 0e       	add	r4, r31
 3a8:	51 1c       	adc	r5, r1
 3aa:	f8 01       	movw	r30, r16
 3ac:	a0 80       	ld	r10, Z
 3ae:	b1 80       	ldd	r11, Z+1	; 0x01
 3b0:	36 fe       	sbrs	r3, 6
 3b2:	03 c0       	rjmp	.+6      	; 0x3ba <vfprintf+0x16c>
 3b4:	69 2d       	mov	r22, r9
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <vfprintf+0x170>
 3ba:	6f ef       	ldi	r22, 0xFF	; 255
 3bc:	7f ef       	ldi	r23, 0xFF	; 255
 3be:	c5 01       	movw	r24, r10
 3c0:	4e d1       	rcall	.+668    	; 0x65e <strnlen>
 3c2:	4c 01       	movw	r8, r24
 3c4:	82 01       	movw	r16, r4
 3c6:	f3 2d       	mov	r31, r3
 3c8:	ff 77       	andi	r31, 0x7F	; 127
 3ca:	3f 2e       	mov	r3, r31
 3cc:	15 c0       	rjmp	.+42     	; 0x3f8 <vfprintf+0x1aa>
 3ce:	28 01       	movw	r4, r16
 3d0:	22 e0       	ldi	r18, 0x02	; 2
 3d2:	42 0e       	add	r4, r18
 3d4:	51 1c       	adc	r5, r1
 3d6:	f8 01       	movw	r30, r16
 3d8:	a0 80       	ld	r10, Z
 3da:	b1 80       	ldd	r11, Z+1	; 0x01
 3dc:	36 fe       	sbrs	r3, 6
 3de:	03 c0       	rjmp	.+6      	; 0x3e6 <vfprintf+0x198>
 3e0:	69 2d       	mov	r22, r9
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <vfprintf+0x19c>
 3e6:	6f ef       	ldi	r22, 0xFF	; 255
 3e8:	7f ef       	ldi	r23, 0xFF	; 255
 3ea:	c5 01       	movw	r24, r10
 3ec:	2d d1       	rcall	.+602    	; 0x648 <strnlen_P>
 3ee:	4c 01       	movw	r8, r24
 3f0:	f3 2d       	mov	r31, r3
 3f2:	f0 68       	ori	r31, 0x80	; 128
 3f4:	3f 2e       	mov	r3, r31
 3f6:	82 01       	movw	r16, r4
 3f8:	33 fc       	sbrc	r3, 3
 3fa:	19 c0       	rjmp	.+50     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3fc:	82 2d       	mov	r24, r2
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	88 16       	cp	r8, r24
 402:	99 06       	cpc	r9, r25
 404:	a0 f4       	brcc	.+40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 406:	b6 01       	movw	r22, r12
 408:	80 e2       	ldi	r24, 0x20	; 32
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	33 d1       	rcall	.+614    	; 0x674 <fputc>
 40e:	2a 94       	dec	r2
 410:	f5 cf       	rjmp	.-22     	; 0x3fc <vfprintf+0x1ae>
 412:	f5 01       	movw	r30, r10
 414:	37 fc       	sbrc	r3, 7
 416:	85 91       	lpm	r24, Z+
 418:	37 fe       	sbrs	r3, 7
 41a:	81 91       	ld	r24, Z+
 41c:	5f 01       	movw	r10, r30
 41e:	b6 01       	movw	r22, r12
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	28 d1       	rcall	.+592    	; 0x674 <fputc>
 424:	21 10       	cpse	r2, r1
 426:	2a 94       	dec	r2
 428:	21 e0       	ldi	r18, 0x01	; 1
 42a:	82 1a       	sub	r8, r18
 42c:	91 08       	sbc	r9, r1
 42e:	81 14       	cp	r8, r1
 430:	91 04       	cpc	r9, r1
 432:	79 f7       	brne	.-34     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 434:	e1 c0       	rjmp	.+450    	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 436:	84 36       	cpi	r24, 0x64	; 100
 438:	11 f0       	breq	.+4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43a:	89 36       	cpi	r24, 0x69	; 105
 43c:	39 f5       	brne	.+78     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 43e:	f8 01       	movw	r30, r16
 440:	37 fe       	sbrs	r3, 7
 442:	07 c0       	rjmp	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	93 81       	ldd	r25, Z+3	; 0x03
 44c:	0c 5f       	subi	r16, 0xFC	; 252
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	08 c0       	rjmp	.+16     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 452:	60 81       	ld	r22, Z
 454:	71 81       	ldd	r23, Z+1	; 0x01
 456:	07 2e       	mov	r0, r23
 458:	00 0c       	add	r0, r0
 45a:	88 0b       	sbc	r24, r24
 45c:	99 0b       	sbc	r25, r25
 45e:	0e 5f       	subi	r16, 0xFE	; 254
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	f3 2d       	mov	r31, r3
 464:	ff 76       	andi	r31, 0x6F	; 111
 466:	3f 2e       	mov	r3, r31
 468:	97 ff       	sbrs	r25, 7
 46a:	09 c0       	rjmp	.+18     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 46c:	90 95       	com	r25
 46e:	80 95       	com	r24
 470:	70 95       	com	r23
 472:	61 95       	neg	r22
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	8f 4f       	sbci	r24, 0xFF	; 255
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	f0 68       	ori	r31, 0x80	; 128
 47c:	3f 2e       	mov	r3, r31
 47e:	2a e0       	ldi	r18, 0x0A	; 10
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	a3 01       	movw	r20, r6
 484:	33 d1       	rcall	.+614    	; 0x6ec <__ultoa_invert>
 486:	88 2e       	mov	r8, r24
 488:	86 18       	sub	r8, r6
 48a:	44 c0       	rjmp	.+136    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 48c:	85 37       	cpi	r24, 0x75	; 117
 48e:	31 f4       	brne	.+12     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 490:	23 2d       	mov	r18, r3
 492:	2f 7e       	andi	r18, 0xEF	; 239
 494:	b2 2e       	mov	r11, r18
 496:	2a e0       	ldi	r18, 0x0A	; 10
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	25 c0       	rjmp	.+74     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 49c:	93 2d       	mov	r25, r3
 49e:	99 7f       	andi	r25, 0xF9	; 249
 4a0:	b9 2e       	mov	r11, r25
 4a2:	8f 36       	cpi	r24, 0x6F	; 111
 4a4:	c1 f0       	breq	.+48     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4a6:	18 f4       	brcc	.+6      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a8:	88 35       	cpi	r24, 0x58	; 88
 4aa:	79 f0       	breq	.+30     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ac:	ae c0       	rjmp	.+348    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 4ae:	80 37       	cpi	r24, 0x70	; 112
 4b0:	19 f0       	breq	.+6      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b2:	88 37       	cpi	r24, 0x78	; 120
 4b4:	21 f0       	breq	.+8      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b6:	a9 c0       	rjmp	.+338    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 4b8:	e9 2f       	mov	r30, r25
 4ba:	e0 61       	ori	r30, 0x10	; 16
 4bc:	be 2e       	mov	r11, r30
 4be:	b4 fe       	sbrs	r11, 4
 4c0:	0d c0       	rjmp	.+26     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4c2:	fb 2d       	mov	r31, r11
 4c4:	f4 60       	ori	r31, 0x04	; 4
 4c6:	bf 2e       	mov	r11, r31
 4c8:	09 c0       	rjmp	.+18     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ca:	34 fe       	sbrs	r3, 4
 4cc:	0a c0       	rjmp	.+20     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4ce:	29 2f       	mov	r18, r25
 4d0:	26 60       	ori	r18, 0x06	; 6
 4d2:	b2 2e       	mov	r11, r18
 4d4:	06 c0       	rjmp	.+12     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d6:	28 e0       	ldi	r18, 0x08	; 8
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	05 c0       	rjmp	.+10     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4dc:	20 e1       	ldi	r18, 0x10	; 16
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e2:	20 e1       	ldi	r18, 0x10	; 16
 4e4:	32 e0       	ldi	r19, 0x02	; 2
 4e6:	f8 01       	movw	r30, r16
 4e8:	b7 fe       	sbrs	r11, 7
 4ea:	07 c0       	rjmp	.+14     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ec:	60 81       	ld	r22, Z
 4ee:	71 81       	ldd	r23, Z+1	; 0x01
 4f0:	82 81       	ldd	r24, Z+2	; 0x02
 4f2:	93 81       	ldd	r25, Z+3	; 0x03
 4f4:	0c 5f       	subi	r16, 0xFC	; 252
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	06 c0       	rjmp	.+12     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4fa:	60 81       	ld	r22, Z
 4fc:	71 81       	ldd	r23, Z+1	; 0x01
 4fe:	80 e0       	ldi	r24, 0x00	; 0
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 5f       	subi	r16, 0xFE	; 254
 504:	1f 4f       	sbci	r17, 0xFF	; 255
 506:	a3 01       	movw	r20, r6
 508:	f1 d0       	rcall	.+482    	; 0x6ec <__ultoa_invert>
 50a:	88 2e       	mov	r8, r24
 50c:	86 18       	sub	r8, r6
 50e:	fb 2d       	mov	r31, r11
 510:	ff 77       	andi	r31, 0x7F	; 127
 512:	3f 2e       	mov	r3, r31
 514:	36 fe       	sbrs	r3, 6
 516:	0d c0       	rjmp	.+26     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 518:	23 2d       	mov	r18, r3
 51a:	2e 7f       	andi	r18, 0xFE	; 254
 51c:	a2 2e       	mov	r10, r18
 51e:	89 14       	cp	r8, r9
 520:	58 f4       	brcc	.+22     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 522:	34 fe       	sbrs	r3, 4
 524:	0b c0       	rjmp	.+22     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 526:	32 fc       	sbrc	r3, 2
 528:	09 c0       	rjmp	.+18     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 52a:	83 2d       	mov	r24, r3
 52c:	8e 7e       	andi	r24, 0xEE	; 238
 52e:	a8 2e       	mov	r10, r24
 530:	05 c0       	rjmp	.+10     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 532:	b8 2c       	mov	r11, r8
 534:	a3 2c       	mov	r10, r3
 536:	03 c0       	rjmp	.+6      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 538:	b8 2c       	mov	r11, r8
 53a:	01 c0       	rjmp	.+2      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53c:	b9 2c       	mov	r11, r9
 53e:	a4 fe       	sbrs	r10, 4
 540:	0f c0       	rjmp	.+30     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 542:	fe 01       	movw	r30, r28
 544:	e8 0d       	add	r30, r8
 546:	f1 1d       	adc	r31, r1
 548:	80 81       	ld	r24, Z
 54a:	80 33       	cpi	r24, 0x30	; 48
 54c:	21 f4       	brne	.+8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54e:	9a 2d       	mov	r25, r10
 550:	99 7e       	andi	r25, 0xE9	; 233
 552:	a9 2e       	mov	r10, r25
 554:	09 c0       	rjmp	.+18     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 556:	a2 fe       	sbrs	r10, 2
 558:	06 c0       	rjmp	.+12     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55a:	b3 94       	inc	r11
 55c:	b3 94       	inc	r11
 55e:	04 c0       	rjmp	.+8      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 560:	8a 2d       	mov	r24, r10
 562:	86 78       	andi	r24, 0x86	; 134
 564:	09 f0       	breq	.+2      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 566:	b3 94       	inc	r11
 568:	a3 fc       	sbrc	r10, 3
 56a:	10 c0       	rjmp	.+32     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 56c:	a0 fe       	sbrs	r10, 0
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	b2 14       	cp	r11, r2
 572:	80 f4       	brcc	.+32     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 574:	28 0c       	add	r2, r8
 576:	92 2c       	mov	r9, r2
 578:	9b 18       	sub	r9, r11
 57a:	0d c0       	rjmp	.+26     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 57c:	b2 14       	cp	r11, r2
 57e:	58 f4       	brcc	.+22     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 580:	b6 01       	movw	r22, r12
 582:	80 e2       	ldi	r24, 0x20	; 32
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	76 d0       	rcall	.+236    	; 0x674 <fputc>
 588:	b3 94       	inc	r11
 58a:	f8 cf       	rjmp	.-16     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 58c:	b2 14       	cp	r11, r2
 58e:	18 f4       	brcc	.+6      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 590:	2b 18       	sub	r2, r11
 592:	02 c0       	rjmp	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 594:	98 2c       	mov	r9, r8
 596:	21 2c       	mov	r2, r1
 598:	a4 fe       	sbrs	r10, 4
 59a:	0f c0       	rjmp	.+30     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 59c:	b6 01       	movw	r22, r12
 59e:	80 e3       	ldi	r24, 0x30	; 48
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	68 d0       	rcall	.+208    	; 0x674 <fputc>
 5a4:	a2 fe       	sbrs	r10, 2
 5a6:	16 c0       	rjmp	.+44     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5a8:	a1 fc       	sbrc	r10, 1
 5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5ac:	88 e7       	ldi	r24, 0x78	; 120
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b2:	88 e5       	ldi	r24, 0x58	; 88
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	b6 01       	movw	r22, r12
 5b8:	0c c0       	rjmp	.+24     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5ba:	8a 2d       	mov	r24, r10
 5bc:	86 78       	andi	r24, 0x86	; 134
 5be:	51 f0       	breq	.+20     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5c0:	a1 fe       	sbrs	r10, 1
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c4:	8b e2       	ldi	r24, 0x2B	; 43
 5c6:	01 c0       	rjmp	.+2      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c8:	80 e2       	ldi	r24, 0x20	; 32
 5ca:	a7 fc       	sbrc	r10, 7
 5cc:	8d e2       	ldi	r24, 0x2D	; 45
 5ce:	b6 01       	movw	r22, r12
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	50 d0       	rcall	.+160    	; 0x674 <fputc>
 5d4:	89 14       	cp	r8, r9
 5d6:	30 f4       	brcc	.+12     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d8:	b6 01       	movw	r22, r12
 5da:	80 e3       	ldi	r24, 0x30	; 48
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	4a d0       	rcall	.+148    	; 0x674 <fputc>
 5e0:	9a 94       	dec	r9
 5e2:	f8 cf       	rjmp	.-16     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5e4:	8a 94       	dec	r8
 5e6:	f3 01       	movw	r30, r6
 5e8:	e8 0d       	add	r30, r8
 5ea:	f1 1d       	adc	r31, r1
 5ec:	80 81       	ld	r24, Z
 5ee:	b6 01       	movw	r22, r12
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	40 d0       	rcall	.+128    	; 0x674 <fputc>
 5f4:	81 10       	cpse	r8, r1
 5f6:	f6 cf       	rjmp	.-20     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5f8:	22 20       	and	r2, r2
 5fa:	09 f4       	brne	.+2      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5fc:	4e ce       	rjmp	.-868    	; 0x29a <vfprintf+0x4c>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	37 d0       	rcall	.+110    	; 0x674 <fputc>
 606:	2a 94       	dec	r2
 608:	f7 cf       	rjmp	.-18     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 60a:	f6 01       	movw	r30, r12
 60c:	86 81       	ldd	r24, Z+6	; 0x06
 60e:	97 81       	ldd	r25, Z+7	; 0x07
 610:	02 c0       	rjmp	.+4      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	9f ef       	ldi	r25, 0xFF	; 255
 616:	2b 96       	adiw	r28, 0x0b	; 11
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	f8 94       	cli
 61c:	de bf       	out	0x3e, r29	; 62
 61e:	0f be       	out	0x3f, r0	; 63
 620:	cd bf       	out	0x3d, r28	; 61
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	1f 91       	pop	r17
 628:	0f 91       	pop	r16
 62a:	ff 90       	pop	r15
 62c:	ef 90       	pop	r14
 62e:	df 90       	pop	r13
 630:	cf 90       	pop	r12
 632:	bf 90       	pop	r11
 634:	af 90       	pop	r10
 636:	9f 90       	pop	r9
 638:	8f 90       	pop	r8
 63a:	7f 90       	pop	r7
 63c:	6f 90       	pop	r6
 63e:	5f 90       	pop	r5
 640:	4f 90       	pop	r4
 642:	3f 90       	pop	r3
 644:	2f 90       	pop	r2
 646:	08 95       	ret

00000648 <strnlen_P>:
 648:	fc 01       	movw	r30, r24
 64a:	05 90       	lpm	r0, Z+
 64c:	61 50       	subi	r22, 0x01	; 1
 64e:	70 40       	sbci	r23, 0x00	; 0
 650:	01 10       	cpse	r0, r1
 652:	d8 f7       	brcc	.-10     	; 0x64a <strnlen_P+0x2>
 654:	80 95       	com	r24
 656:	90 95       	com	r25
 658:	8e 0f       	add	r24, r30
 65a:	9f 1f       	adc	r25, r31
 65c:	08 95       	ret

0000065e <strnlen>:
 65e:	fc 01       	movw	r30, r24
 660:	61 50       	subi	r22, 0x01	; 1
 662:	70 40       	sbci	r23, 0x00	; 0
 664:	01 90       	ld	r0, Z+
 666:	01 10       	cpse	r0, r1
 668:	d8 f7       	brcc	.-10     	; 0x660 <strnlen+0x2>
 66a:	80 95       	com	r24
 66c:	90 95       	com	r25
 66e:	8e 0f       	add	r24, r30
 670:	9f 1f       	adc	r25, r31
 672:	08 95       	ret

00000674 <fputc>:
 674:	0f 93       	push	r16
 676:	1f 93       	push	r17
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	fb 01       	movw	r30, r22
 67e:	23 81       	ldd	r18, Z+3	; 0x03
 680:	21 fd       	sbrc	r18, 1
 682:	03 c0       	rjmp	.+6      	; 0x68a <fputc+0x16>
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	9f ef       	ldi	r25, 0xFF	; 255
 688:	2c c0       	rjmp	.+88     	; 0x6e2 <fputc+0x6e>
 68a:	22 ff       	sbrs	r18, 2
 68c:	16 c0       	rjmp	.+44     	; 0x6ba <fputc+0x46>
 68e:	46 81       	ldd	r20, Z+6	; 0x06
 690:	57 81       	ldd	r21, Z+7	; 0x07
 692:	24 81       	ldd	r18, Z+4	; 0x04
 694:	35 81       	ldd	r19, Z+5	; 0x05
 696:	42 17       	cp	r20, r18
 698:	53 07       	cpc	r21, r19
 69a:	44 f4       	brge	.+16     	; 0x6ac <fputc+0x38>
 69c:	a0 81       	ld	r26, Z
 69e:	b1 81       	ldd	r27, Z+1	; 0x01
 6a0:	9d 01       	movw	r18, r26
 6a2:	2f 5f       	subi	r18, 0xFF	; 255
 6a4:	3f 4f       	sbci	r19, 0xFF	; 255
 6a6:	31 83       	std	Z+1, r19	; 0x01
 6a8:	20 83       	st	Z, r18
 6aa:	8c 93       	st	X, r24
 6ac:	26 81       	ldd	r18, Z+6	; 0x06
 6ae:	37 81       	ldd	r19, Z+7	; 0x07
 6b0:	2f 5f       	subi	r18, 0xFF	; 255
 6b2:	3f 4f       	sbci	r19, 0xFF	; 255
 6b4:	37 83       	std	Z+7, r19	; 0x07
 6b6:	26 83       	std	Z+6, r18	; 0x06
 6b8:	14 c0       	rjmp	.+40     	; 0x6e2 <fputc+0x6e>
 6ba:	8b 01       	movw	r16, r22
 6bc:	ec 01       	movw	r28, r24
 6be:	fb 01       	movw	r30, r22
 6c0:	00 84       	ldd	r0, Z+8	; 0x08
 6c2:	f1 85       	ldd	r31, Z+9	; 0x09
 6c4:	e0 2d       	mov	r30, r0
 6c6:	09 95       	icall
 6c8:	89 2b       	or	r24, r25
 6ca:	e1 f6       	brne	.-72     	; 0x684 <fputc+0x10>
 6cc:	d8 01       	movw	r26, r16
 6ce:	16 96       	adiw	r26, 0x06	; 6
 6d0:	8d 91       	ld	r24, X+
 6d2:	9c 91       	ld	r25, X
 6d4:	17 97       	sbiw	r26, 0x07	; 7
 6d6:	01 96       	adiw	r24, 0x01	; 1
 6d8:	17 96       	adiw	r26, 0x07	; 7
 6da:	9c 93       	st	X, r25
 6dc:	8e 93       	st	-X, r24
 6de:	16 97       	sbiw	r26, 0x06	; 6
 6e0:	ce 01       	movw	r24, r28
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	08 95       	ret

000006ec <__ultoa_invert>:
 6ec:	fa 01       	movw	r30, r20
 6ee:	aa 27       	eor	r26, r26
 6f0:	28 30       	cpi	r18, 0x08	; 8
 6f2:	51 f1       	breq	.+84     	; 0x748 <__ultoa_invert+0x5c>
 6f4:	20 31       	cpi	r18, 0x10	; 16
 6f6:	81 f1       	breq	.+96     	; 0x758 <__ultoa_invert+0x6c>
 6f8:	e8 94       	clt
 6fa:	6f 93       	push	r22
 6fc:	6e 7f       	andi	r22, 0xFE	; 254
 6fe:	6e 5f       	subi	r22, 0xFE	; 254
 700:	7f 4f       	sbci	r23, 0xFF	; 255
 702:	8f 4f       	sbci	r24, 0xFF	; 255
 704:	9f 4f       	sbci	r25, 0xFF	; 255
 706:	af 4f       	sbci	r26, 0xFF	; 255
 708:	b1 e0       	ldi	r27, 0x01	; 1
 70a:	3e d0       	rcall	.+124    	; 0x788 <__ultoa_invert+0x9c>
 70c:	b4 e0       	ldi	r27, 0x04	; 4
 70e:	3c d0       	rcall	.+120    	; 0x788 <__ultoa_invert+0x9c>
 710:	67 0f       	add	r22, r23
 712:	78 1f       	adc	r23, r24
 714:	89 1f       	adc	r24, r25
 716:	9a 1f       	adc	r25, r26
 718:	a1 1d       	adc	r26, r1
 71a:	68 0f       	add	r22, r24
 71c:	79 1f       	adc	r23, r25
 71e:	8a 1f       	adc	r24, r26
 720:	91 1d       	adc	r25, r1
 722:	a1 1d       	adc	r26, r1
 724:	6a 0f       	add	r22, r26
 726:	71 1d       	adc	r23, r1
 728:	81 1d       	adc	r24, r1
 72a:	91 1d       	adc	r25, r1
 72c:	a1 1d       	adc	r26, r1
 72e:	20 d0       	rcall	.+64     	; 0x770 <__ultoa_invert+0x84>
 730:	09 f4       	brne	.+2      	; 0x734 <__ultoa_invert+0x48>
 732:	68 94       	set
 734:	3f 91       	pop	r19
 736:	2a e0       	ldi	r18, 0x0A	; 10
 738:	26 9f       	mul	r18, r22
 73a:	11 24       	eor	r1, r1
 73c:	30 19       	sub	r19, r0
 73e:	30 5d       	subi	r19, 0xD0	; 208
 740:	31 93       	st	Z+, r19
 742:	de f6       	brtc	.-74     	; 0x6fa <__ultoa_invert+0xe>
 744:	cf 01       	movw	r24, r30
 746:	08 95       	ret
 748:	46 2f       	mov	r20, r22
 74a:	47 70       	andi	r20, 0x07	; 7
 74c:	40 5d       	subi	r20, 0xD0	; 208
 74e:	41 93       	st	Z+, r20
 750:	b3 e0       	ldi	r27, 0x03	; 3
 752:	0f d0       	rcall	.+30     	; 0x772 <__ultoa_invert+0x86>
 754:	c9 f7       	brne	.-14     	; 0x748 <__ultoa_invert+0x5c>
 756:	f6 cf       	rjmp	.-20     	; 0x744 <__ultoa_invert+0x58>
 758:	46 2f       	mov	r20, r22
 75a:	4f 70       	andi	r20, 0x0F	; 15
 75c:	40 5d       	subi	r20, 0xD0	; 208
 75e:	4a 33       	cpi	r20, 0x3A	; 58
 760:	18 f0       	brcs	.+6      	; 0x768 <__ultoa_invert+0x7c>
 762:	49 5d       	subi	r20, 0xD9	; 217
 764:	31 fd       	sbrc	r19, 1
 766:	40 52       	subi	r20, 0x20	; 32
 768:	41 93       	st	Z+, r20
 76a:	02 d0       	rcall	.+4      	; 0x770 <__ultoa_invert+0x84>
 76c:	a9 f7       	brne	.-22     	; 0x758 <__ultoa_invert+0x6c>
 76e:	ea cf       	rjmp	.-44     	; 0x744 <__ultoa_invert+0x58>
 770:	b4 e0       	ldi	r27, 0x04	; 4
 772:	a6 95       	lsr	r26
 774:	97 95       	ror	r25
 776:	87 95       	ror	r24
 778:	77 95       	ror	r23
 77a:	67 95       	ror	r22
 77c:	ba 95       	dec	r27
 77e:	c9 f7       	brne	.-14     	; 0x772 <__ultoa_invert+0x86>
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	61 05       	cpc	r22, r1
 784:	71 05       	cpc	r23, r1
 786:	08 95       	ret
 788:	9b 01       	movw	r18, r22
 78a:	ac 01       	movw	r20, r24
 78c:	0a 2e       	mov	r0, r26
 78e:	06 94       	lsr	r0
 790:	57 95       	ror	r21
 792:	47 95       	ror	r20
 794:	37 95       	ror	r19
 796:	27 95       	ror	r18
 798:	ba 95       	dec	r27
 79a:	c9 f7       	brne	.-14     	; 0x78e <__ultoa_invert+0xa2>
 79c:	62 0f       	add	r22, r18
 79e:	73 1f       	adc	r23, r19
 7a0:	84 1f       	adc	r24, r20
 7a2:	95 1f       	adc	r25, r21
 7a4:	a0 1d       	adc	r26, r0
 7a6:	08 95       	ret

000007a8 <_exit>:
 7a8:	f8 94       	cli

000007aa <__stop_program>:
 7aa:	ff cf       	rjmp	.-2      	; 0x7aa <__stop_program>
