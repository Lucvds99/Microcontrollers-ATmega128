
EindOpdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000087e  00000912  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000087e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800104  00800104  00000916  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000916  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000974  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e2b  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a5c  00000000  00000000  0000187b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067c  00000000  00000000  000022d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002954  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000574  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000426  00000000  00000000  0000304c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003472  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	c3 c0       	rjmp	.+390    	; 0x18c <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e7       	ldi	r30, 0x7E	; 126
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 30       	cpi	r26, 0x08	; 8
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d1 d0       	rcall	.+418    	; 0x266 <main>
  c4:	da c3       	rjmp	.+1972   	; 0x87a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_strobe_lcd_e>:
	lcd_write_cmd(0x01);
}

void lcd_set_cursor(int position)
{
	lcd_write_cmd(0x80 + position);
  c8:	85 b3       	in	r24, 0x15	; 21
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	8f ec       	ldi	r24, 0xCF	; 207
  d0:	97 e0       	ldi	r25, 0x07	; 7
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_strobe_lcd_e+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_strobe_lcd_e+0x10>
  d8:	00 00       	nop
  da:	85 b3       	in	r24, 0x15	; 21
  dc:	87 7f       	andi	r24, 0xF7	; 247
  de:	85 bb       	out	0x15, r24	; 21
  e0:	8f ec       	ldi	r24, 0xCF	; 207
  e2:	97 e0       	ldi	r25, 0x07	; 7
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <lcd_strobe_lcd_e+0x1c>
  e8:	00 c0       	rjmp	.+0      	; 0xea <lcd_strobe_lcd_e+0x22>
  ea:	00 00       	nop
  ec:	08 95       	ret

000000ee <lcd_write_cmd>:
  ee:	cf 93       	push	r28
  f0:	c8 2f       	mov	r28, r24
  f2:	80 7f       	andi	r24, 0xF0	; 240
  f4:	85 bb       	out	0x15, r24	; 21
  f6:	e8 df       	rcall	.-48     	; 0xc8 <lcd_strobe_lcd_e>
  f8:	c2 95       	swap	r28
  fa:	c0 7f       	andi	r28, 0xF0	; 240
  fc:	c5 bb       	out	0x15, r28	; 21
  fe:	e4 df       	rcall	.-56     	; 0xc8 <lcd_strobe_lcd_e>
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <lcd_init>:
 104:	8f ef       	ldi	r24, 0xFF	; 255
 106:	84 bb       	out	0x14, r24	; 20
 108:	15 ba       	out	0x15, r1	; 21
 10a:	88 e2       	ldi	r24, 0x28	; 40
 10c:	85 bb       	out	0x15, r24	; 21
 10e:	dc df       	rcall	.-72     	; 0xc8 <lcd_strobe_lcd_e>
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	ed df       	rcall	.-38     	; 0xee <lcd_write_cmd>
 114:	8c e0       	ldi	r24, 0x0C	; 12
 116:	eb df       	rcall	.-42     	; 0xee <lcd_write_cmd>
 118:	8f e0       	ldi	r24, 0x0F	; 15
 11a:	e9 cf       	rjmp	.-46     	; 0xee <lcd_write_cmd>
 11c:	08 95       	ret

0000011e <lcd_clear_display>:
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	e6 cf       	rjmp	.-52     	; 0xee <lcd_write_cmd>
 122:	08 95       	ret

00000124 <lcd_write_data>:

	// Second nibble
	PORTC = (byte<<4);
	lcd_strobe_lcd_e();
}
void lcd_write_data(unsigned char byte) {
 124:	cf 93       	push	r28
 126:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte & 0xf0;
 128:	80 7f       	andi	r24, 0xF0	; 240
 12a:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 12c:	85 b3       	in	r24, 0x15	; 21
 12e:	84 60       	ori	r24, 0x04	; 4
 130:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 132:	ca df       	rcall	.-108    	; 0xc8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 134:	c2 95       	swap	r28
 136:	c0 7f       	andi	r28, 0xF0	; 240
 138:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 13a:	85 b3       	in	r24, 0x15	; 21
 13c:	84 60       	ori	r24, 0x04	; 4
	lcd_strobe_lcd_e();
 13e:	85 bb       	out	0x15, r24	; 21
 140:	c3 df       	rcall	.-122    	; 0xc8 <lcd_strobe_lcd_e>
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <lcd_display_text>:
	// Set cursor
	lcd_write_cmd(0x0F);
}

void lcd_display_text(char *str)
{
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ec 01       	movw	r28, r24
	for(;*str; str++){
 14c:	02 c0       	rjmp	.+4      	; 0x152 <lcd_display_text+0xc>
		lcd_write_data(*str);
 14e:	ea df       	rcall	.-44     	; 0x124 <lcd_write_data>
	lcd_write_cmd(0x0F);
}

void lcd_display_text(char *str)
{
	for(;*str; str++){
 150:	21 96       	adiw	r28, 0x01	; 1
 152:	88 81       	ld	r24, Y
 154:	81 11       	cpse	r24, r1
 156:	fb cf       	rjmp	.-10     	; 0x14e <lcd_display_text+0x8>
		lcd_write_data(*str);
	}
}
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <generateByteFromTime>:
			//*buffer = '-';
		}
		return (char *)buffer;
	}
void resetBuffer(char *buffer) {
	*buffer = 0b00000000; // Set the buffer byte to 0b00000000
 15e:	03 97       	sbiw	r24, 0x03	; 3
 160:	54 f4       	brge	.+20     	; 0x176 <generateByteFromTime+0x18>
 162:	fb 01       	movw	r30, r22
 164:	80 81       	ld	r24, Z
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	81 60       	ori	r24, 0x01	; 1
 172:	80 83       	st	Z, r24
 174:	09 c0       	rjmp	.+18     	; 0x188 <generateByteFromTime+0x2a>
 176:	fb 01       	movw	r30, r22
 178:	80 81       	ld	r24, Z
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	83 60       	ori	r24, 0x03	; 3
 186:	80 83       	st	Z, r24
 188:	cb 01       	movw	r24, r22
 18a:	08 95       	ret

0000018c <__vector_1>:
}

ISR(INT0_vect)
{
 18c:	1f 92       	push	r1
 18e:	0f 92       	push	r0
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	0f 92       	push	r0
 194:	11 24       	eor	r1, r1
 196:	0b b6       	in	r0, 0x3b	; 59
 198:	0f 92       	push	r0
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	2f 93       	push	r18
 1a0:	3f 93       	push	r19
 1a2:	4f 93       	push	r20
 1a4:	5f 93       	push	r21
 1a6:	6f 93       	push	r22
 1a8:	7f 93       	push	r23
 1aa:	8f 93       	push	r24
 1ac:	9f 93       	push	r25
 1ae:	af 93       	push	r26
 1b0:	bf 93       	push	r27
 1b2:	ef 93       	push	r30
 1b4:	ff 93       	push	r31
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	cd b7       	in	r28, 0x3d	; 61
 1bc:	de b7       	in	r29, 0x3e	; 62
 1be:	60 97       	sbiw	r28, 0x10	; 16
 1c0:	de bf       	out	0x3e, r29	; 62
 1c2:	cd bf       	out	0x3d, r28	; 61
	READING_INPUT = (PIND & 1);
 1c4:	80 b3       	in	r24, 0x10	; 16
 1c6:	81 70       	andi	r24, 0x01	; 1
 1c8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
	if(READING_INPUT == 0 )
 1cc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 1d0:	81 11       	cpse	r24, r1
 1d2:	28 c0       	rjmp	.+80     	; 0x224 <__vector_1+0x98>
	{
		char count [16];
		//get morse value and use morse map to determine Letter
		lcd_clear_display();
 1d4:	a4 df       	rcall	.-184    	; 0x11e <lcd_clear_display>
		generateByteFromTime(morse_units, &buffer);
 1d6:	67 e0       	ldi	r22, 0x07	; 7
 1d8:	71 e0       	ldi	r23, 0x01	; 1
 1da:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <morse_units>
 1de:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <morse_units+0x1>
 1e2:	bd df       	rcall	.-134    	; 0x15e <generateByteFromTime>
		sprintf(count, "%d", morse_units);
 1e4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <morse_units+0x1>
 1e8:	8f 93       	push	r24
 1ea:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <morse_units>
 1ee:	8f 93       	push	r24
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	8e 01       	movw	r16, r28
 1fa:	0f 5f       	subi	r16, 0xFF	; 255
 1fc:	1f 4f       	sbci	r17, 0xFF	; 255
 1fe:	1f 93       	push	r17
 200:	0f 93       	push	r16
		lcd_display_text(count);
 202:	60 d0       	rcall	.+192    	; 0x2c4 <sprintf>
 204:	c8 01       	movw	r24, r16
 206:	9f df       	rcall	.-194    	; 0x146 <lcd_display_text>
		morse_units = 1;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <morse_units+0x1>
 210:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <morse_units>
		PORTB = (0 << 0) ; // Toggle the LED
 214:	18 ba       	out	0x18, r1	; 24
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	04 c0       	rjmp	.+8      	; 0x22c <__vector_1+0xa0>
	}else
	{
		TIFR = (1 << OCF1A ) ; // clear the CTC flag ( writing a logic one to the set flag clears it)
 224:	80 e1       	ldi	r24, 0x10	; 16
 226:	86 bf       	out	0x36, r24	; 54
		PORTB = (1 << 0) ; // Toggle the LED
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	88 bb       	out	0x18, r24	; 24
	}
	
}
 22c:	60 96       	adiw	r28, 0x10	; 16
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	f8 94       	cli
 232:	de bf       	out	0x3e, r29	; 62
 234:	0f be       	out	0x3f, r0	; 63
 236:	cd bf       	out	0x3d, r28	; 61
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	ff 91       	pop	r31
 23e:	ef 91       	pop	r30
 240:	bf 91       	pop	r27
 242:	af 91       	pop	r26
 244:	9f 91       	pop	r25
 246:	8f 91       	pop	r24
 248:	7f 91       	pop	r23
 24a:	6f 91       	pop	r22
 24c:	5f 91       	pop	r21
 24e:	4f 91       	pop	r20
 250:	3f 91       	pop	r19
 252:	2f 91       	pop	r18
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	0f 90       	pop	r0
 25a:	0b be       	out	0x3b, r0	; 59
 25c:	0f 90       	pop	r0
 25e:	0f be       	out	0x3f, r0	; 63
 260:	0f 90       	pop	r0
 262:	1f 90       	pop	r1
 264:	18 95       	reti

00000266 <main>:

int main(void)
{
	DDRB |= (1 << 0) | (1 << 1) ; // Set LED as output
 266:	87 b3       	in	r24, 0x17	; 23
 268:	83 60       	ori	r24, 0x03	; 3
 26a:	87 bb       	out	0x17, r24	; 23
	TCCR1B |= (1 << WGM12 ); // Configure timer 1 for CTC mode
 26c:	8e b5       	in	r24, 0x2e	; 46
 26e:	88 60       	ori	r24, 0x08	; 8
 270:	8e bd       	out	0x2e, r24	; 46
	OCR1A = (SECOND_ON_PRE_1024/2); // Set CTC compare value to 1Hz at 1 MHz AVR clock , with a prescaler of 64
 272:	83 e1       	ldi	r24, 0x13	; 19
 274:	93 e1       	ldi	r25, 0x13	; 19
 276:	9b bd       	out	0x2b, r25	; 43
 278:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= ((1 << CS10 ) | (0 << CS11 )) | (1 << CS12) ; // Start timer at Fcpu /1024
 27a:	8e b5       	in	r24, 0x2e	; 46
 27c:	85 60       	ori	r24, 0x05	; 5
 27e:	8e bd       	out	0x2e, r24	; 46
	
	// Initialiseer knop
	EICRA |= (1 << ISC00);      // Externe interrupt trigger op any digital change
 280:	ea e6       	ldi	r30, 0x6A	; 106
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	81 60       	ori	r24, 0x01	; 1
 288:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);       // Activeer externe interrupt 0
 28a:	89 b7       	in	r24, 0x39	; 57
 28c:	81 60       	ori	r24, 0x01	; 1
 28e:	89 bf       	out	0x39, r24	; 57
	sei();
 290:	78 94       	sei
	
	
	
	
	lcd_init();
 292:	38 df       	rcall	.-400    	; 0x104 <lcd_init>
	lcd_clear_display();
 294:	44 df       	rcall	.-376    	; 0x11e <lcd_clear_display>
 296:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
	for (;;)
	{
		if (READING_INPUT){
 29a:	88 23       	and	r24, r24
 29c:	e1 f3       	breq	.-8      	; 0x296 <main+0x30>
 29e:	06 b6       	in	r0, 0x36	; 54
			if ( TIFR & (1 << OCF1A ))
 2a0:	04 fe       	sbrs	r0, 4
 2a2:	f9 cf       	rjmp	.-14     	; 0x296 <main+0x30>
 2a4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <morse_units>
			{
				morse_units ++;	
 2a8:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <morse_units+0x1>
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <morse_units+0x1>
 2b2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <morse_units>
 2b6:	98 b3       	in	r25, 0x18	; 24
				PORTB ^= (1 << 0) ; // Toggle the LED
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	89 27       	eor	r24, r25
 2bc:	88 bb       	out	0x18, r24	; 24
 2be:	80 e1       	ldi	r24, 0x10	; 16
				TIFR = (1 << OCF1A ) ; // clear the CTC flag ( writing a logic one to the set flag clears it)	
 2c0:	86 bf       	out	0x36, r24	; 54
 2c2:	e9 cf       	rjmp	.-46     	; 0x296 <main+0x30>

000002c4 <sprintf>:
 2c4:	0f 93       	push	r16
 2c6:	1f 93       	push	r17
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	2e 97       	sbiw	r28, 0x0e	; 14
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	0d 89       	ldd	r16, Y+21	; 0x15
 2de:	1e 89       	ldd	r17, Y+22	; 0x16
 2e0:	86 e0       	ldi	r24, 0x06	; 6
 2e2:	8c 83       	std	Y+4, r24	; 0x04
 2e4:	1a 83       	std	Y+2, r17	; 0x02
 2e6:	09 83       	std	Y+1, r16	; 0x01
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	9f e7       	ldi	r25, 0x7F	; 127
 2ec:	9e 83       	std	Y+6, r25	; 0x06
 2ee:	8d 83       	std	Y+5, r24	; 0x05
 2f0:	ae 01       	movw	r20, r28
 2f2:	47 5e       	subi	r20, 0xE7	; 231
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	6f 89       	ldd	r22, Y+23	; 0x17
 2f8:	78 8d       	ldd	r23, Y+24	; 0x18
 2fa:	ce 01       	movw	r24, r28
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	10 d0       	rcall	.+32     	; 0x320 <vfprintf>
 300:	ef 81       	ldd	r30, Y+7	; 0x07
 302:	f8 85       	ldd	r31, Y+8	; 0x08
 304:	e0 0f       	add	r30, r16
 306:	f1 1f       	adc	r31, r17
 308:	10 82       	st	Z, r1
 30a:	2e 96       	adiw	r28, 0x0e	; 14
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	de bf       	out	0x3e, r29	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	cd bf       	out	0x3d, r28	; 61
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	1f 91       	pop	r17
 31c:	0f 91       	pop	r16
 31e:	08 95       	ret

00000320 <vfprintf>:
 320:	2f 92       	push	r2
 322:	3f 92       	push	r3
 324:	4f 92       	push	r4
 326:	5f 92       	push	r5
 328:	6f 92       	push	r6
 32a:	7f 92       	push	r7
 32c:	8f 92       	push	r8
 32e:	9f 92       	push	r9
 330:	af 92       	push	r10
 332:	bf 92       	push	r11
 334:	cf 92       	push	r12
 336:	df 92       	push	r13
 338:	ef 92       	push	r14
 33a:	ff 92       	push	r15
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	2b 97       	sbiw	r28, 0x0b	; 11
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
 354:	6c 01       	movw	r12, r24
 356:	7b 01       	movw	r14, r22
 358:	8a 01       	movw	r16, r20
 35a:	fc 01       	movw	r30, r24
 35c:	17 82       	std	Z+7, r1	; 0x07
 35e:	16 82       	std	Z+6, r1	; 0x06
 360:	83 81       	ldd	r24, Z+3	; 0x03
 362:	81 ff       	sbrs	r24, 1
 364:	bf c1       	rjmp	.+894    	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 366:	ce 01       	movw	r24, r28
 368:	01 96       	adiw	r24, 0x01	; 1
 36a:	3c 01       	movw	r6, r24
 36c:	f6 01       	movw	r30, r12
 36e:	93 81       	ldd	r25, Z+3	; 0x03
 370:	f7 01       	movw	r30, r14
 372:	93 fd       	sbrc	r25, 3
 374:	85 91       	lpm	r24, Z+
 376:	93 ff       	sbrs	r25, 3
 378:	81 91       	ld	r24, Z+
 37a:	7f 01       	movw	r14, r30
 37c:	88 23       	and	r24, r24
 37e:	09 f4       	brne	.+2      	; 0x382 <vfprintf+0x62>
 380:	ad c1       	rjmp	.+858    	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 382:	85 32       	cpi	r24, 0x25	; 37
 384:	39 f4       	brne	.+14     	; 0x394 <vfprintf+0x74>
 386:	93 fd       	sbrc	r25, 3
 388:	85 91       	lpm	r24, Z+
 38a:	93 ff       	sbrs	r25, 3
 38c:	81 91       	ld	r24, Z+
 38e:	7f 01       	movw	r14, r30
 390:	85 32       	cpi	r24, 0x25	; 37
 392:	21 f4       	brne	.+8      	; 0x39c <vfprintf+0x7c>
 394:	b6 01       	movw	r22, r12
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	d6 d1       	rcall	.+940    	; 0x746 <fputc>
 39a:	e8 cf       	rjmp	.-48     	; 0x36c <vfprintf+0x4c>
 39c:	91 2c       	mov	r9, r1
 39e:	21 2c       	mov	r2, r1
 3a0:	31 2c       	mov	r3, r1
 3a2:	ff e1       	ldi	r31, 0x1F	; 31
 3a4:	f3 15       	cp	r31, r3
 3a6:	d8 f0       	brcs	.+54     	; 0x3de <vfprintf+0xbe>
 3a8:	8b 32       	cpi	r24, 0x2B	; 43
 3aa:	79 f0       	breq	.+30     	; 0x3ca <vfprintf+0xaa>
 3ac:	38 f4       	brcc	.+14     	; 0x3bc <vfprintf+0x9c>
 3ae:	80 32       	cpi	r24, 0x20	; 32
 3b0:	79 f0       	breq	.+30     	; 0x3d0 <vfprintf+0xb0>
 3b2:	83 32       	cpi	r24, 0x23	; 35
 3b4:	a1 f4       	brne	.+40     	; 0x3de <vfprintf+0xbe>
 3b6:	23 2d       	mov	r18, r3
 3b8:	20 61       	ori	r18, 0x10	; 16
 3ba:	1d c0       	rjmp	.+58     	; 0x3f6 <vfprintf+0xd6>
 3bc:	8d 32       	cpi	r24, 0x2D	; 45
 3be:	61 f0       	breq	.+24     	; 0x3d8 <vfprintf+0xb8>
 3c0:	80 33       	cpi	r24, 0x30	; 48
 3c2:	69 f4       	brne	.+26     	; 0x3de <vfprintf+0xbe>
 3c4:	23 2d       	mov	r18, r3
 3c6:	21 60       	ori	r18, 0x01	; 1
 3c8:	16 c0       	rjmp	.+44     	; 0x3f6 <vfprintf+0xd6>
 3ca:	83 2d       	mov	r24, r3
 3cc:	82 60       	ori	r24, 0x02	; 2
 3ce:	38 2e       	mov	r3, r24
 3d0:	e3 2d       	mov	r30, r3
 3d2:	e4 60       	ori	r30, 0x04	; 4
 3d4:	3e 2e       	mov	r3, r30
 3d6:	2a c0       	rjmp	.+84     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3d8:	f3 2d       	mov	r31, r3
 3da:	f8 60       	ori	r31, 0x08	; 8
 3dc:	1d c0       	rjmp	.+58     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3de:	37 fc       	sbrc	r3, 7
 3e0:	2d c0       	rjmp	.+90     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 3e2:	20 ed       	ldi	r18, 0xD0	; 208
 3e4:	28 0f       	add	r18, r24
 3e6:	2a 30       	cpi	r18, 0x0A	; 10
 3e8:	40 f0       	brcs	.+16     	; 0x3fa <vfprintf+0xda>
 3ea:	8e 32       	cpi	r24, 0x2E	; 46
 3ec:	b9 f4       	brne	.+46     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3ee:	36 fc       	sbrc	r3, 6
 3f0:	75 c1       	rjmp	.+746    	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 3f2:	23 2d       	mov	r18, r3
 3f4:	20 64       	ori	r18, 0x40	; 64
 3f6:	32 2e       	mov	r3, r18
 3f8:	19 c0       	rjmp	.+50     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3fa:	36 fe       	sbrs	r3, 6
 3fc:	06 c0       	rjmp	.+12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fe:	8a e0       	ldi	r24, 0x0A	; 10
 400:	98 9e       	mul	r9, r24
 402:	20 0d       	add	r18, r0
 404:	11 24       	eor	r1, r1
 406:	92 2e       	mov	r9, r18
 408:	11 c0       	rjmp	.+34     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 40a:	ea e0       	ldi	r30, 0x0A	; 10
 40c:	2e 9e       	mul	r2, r30
 40e:	20 0d       	add	r18, r0
 410:	11 24       	eor	r1, r1
 412:	22 2e       	mov	r2, r18
 414:	f3 2d       	mov	r31, r3
 416:	f0 62       	ori	r31, 0x20	; 32
 418:	3f 2e       	mov	r3, r31
 41a:	08 c0       	rjmp	.+16     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41c:	8c 36       	cpi	r24, 0x6C	; 108
 41e:	21 f4       	brne	.+8      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 420:	83 2d       	mov	r24, r3
 422:	80 68       	ori	r24, 0x80	; 128
 424:	38 2e       	mov	r3, r24
 426:	02 c0       	rjmp	.+4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 428:	88 36       	cpi	r24, 0x68	; 104
 42a:	41 f4       	brne	.+16     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 42c:	f7 01       	movw	r30, r14
 42e:	93 fd       	sbrc	r25, 3
 430:	85 91       	lpm	r24, Z+
 432:	93 ff       	sbrs	r25, 3
 434:	81 91       	ld	r24, Z+
 436:	7f 01       	movw	r14, r30
 438:	81 11       	cpse	r24, r1
 43a:	b3 cf       	rjmp	.-154    	; 0x3a2 <vfprintf+0x82>
 43c:	98 2f       	mov	r25, r24
 43e:	9f 7d       	andi	r25, 0xDF	; 223
 440:	95 54       	subi	r25, 0x45	; 69
 442:	93 30       	cpi	r25, 0x03	; 3
 444:	28 f4       	brcc	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	0c 5f       	subi	r16, 0xFC	; 252
 448:	1f 4f       	sbci	r17, 0xFF	; 255
 44a:	9f e3       	ldi	r25, 0x3F	; 63
 44c:	99 83       	std	Y+1, r25	; 0x01
 44e:	0d c0       	rjmp	.+26     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 450:	83 36       	cpi	r24, 0x63	; 99
 452:	31 f0       	breq	.+12     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 454:	83 37       	cpi	r24, 0x73	; 115
 456:	71 f0       	breq	.+28     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 458:	83 35       	cpi	r24, 0x53	; 83
 45a:	09 f0       	breq	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45c:	55 c0       	rjmp	.+170    	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 45e:	20 c0       	rjmp	.+64     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 460:	f8 01       	movw	r30, r16
 462:	80 81       	ld	r24, Z
 464:	89 83       	std	Y+1, r24	; 0x01
 466:	0e 5f       	subi	r16, 0xFE	; 254
 468:	1f 4f       	sbci	r17, 0xFF	; 255
 46a:	88 24       	eor	r8, r8
 46c:	83 94       	inc	r8
 46e:	91 2c       	mov	r9, r1
 470:	53 01       	movw	r10, r6
 472:	12 c0       	rjmp	.+36     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 474:	28 01       	movw	r4, r16
 476:	f2 e0       	ldi	r31, 0x02	; 2
 478:	4f 0e       	add	r4, r31
 47a:	51 1c       	adc	r5, r1
 47c:	f8 01       	movw	r30, r16
 47e:	a0 80       	ld	r10, Z
 480:	b1 80       	ldd	r11, Z+1	; 0x01
 482:	36 fe       	sbrs	r3, 6
 484:	03 c0       	rjmp	.+6      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 486:	69 2d       	mov	r22, r9
 488:	70 e0       	ldi	r23, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48c:	6f ef       	ldi	r22, 0xFF	; 255
 48e:	7f ef       	ldi	r23, 0xFF	; 255
 490:	c5 01       	movw	r24, r10
 492:	4e d1       	rcall	.+668    	; 0x730 <strnlen>
 494:	4c 01       	movw	r8, r24
 496:	82 01       	movw	r16, r4
 498:	f3 2d       	mov	r31, r3
 49a:	ff 77       	andi	r31, 0x7F	; 127
 49c:	3f 2e       	mov	r3, r31
 49e:	15 c0       	rjmp	.+42     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4a0:	28 01       	movw	r4, r16
 4a2:	22 e0       	ldi	r18, 0x02	; 2
 4a4:	42 0e       	add	r4, r18
 4a6:	51 1c       	adc	r5, r1
 4a8:	f8 01       	movw	r30, r16
 4aa:	a0 80       	ld	r10, Z
 4ac:	b1 80       	ldd	r11, Z+1	; 0x01
 4ae:	36 fe       	sbrs	r3, 6
 4b0:	03 c0       	rjmp	.+6      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b2:	69 2d       	mov	r22, r9
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b8:	6f ef       	ldi	r22, 0xFF	; 255
 4ba:	7f ef       	ldi	r23, 0xFF	; 255
 4bc:	c5 01       	movw	r24, r10
 4be:	2d d1       	rcall	.+602    	; 0x71a <strnlen_P>
 4c0:	4c 01       	movw	r8, r24
 4c2:	f3 2d       	mov	r31, r3
 4c4:	f0 68       	ori	r31, 0x80	; 128
 4c6:	3f 2e       	mov	r3, r31
 4c8:	82 01       	movw	r16, r4
 4ca:	33 fc       	sbrc	r3, 3
 4cc:	19 c0       	rjmp	.+50     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ce:	82 2d       	mov	r24, r2
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	88 16       	cp	r8, r24
 4d4:	99 06       	cpc	r9, r25
 4d6:	a0 f4       	brcc	.+40     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4d8:	b6 01       	movw	r22, r12
 4da:	80 e2       	ldi	r24, 0x20	; 32
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	33 d1       	rcall	.+614    	; 0x746 <fputc>
 4e0:	2a 94       	dec	r2
 4e2:	f5 cf       	rjmp	.-22     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4e4:	f5 01       	movw	r30, r10
 4e6:	37 fc       	sbrc	r3, 7
 4e8:	85 91       	lpm	r24, Z+
 4ea:	37 fe       	sbrs	r3, 7
 4ec:	81 91       	ld	r24, Z+
 4ee:	5f 01       	movw	r10, r30
 4f0:	b6 01       	movw	r22, r12
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	28 d1       	rcall	.+592    	; 0x746 <fputc>
 4f6:	21 10       	cpse	r2, r1
 4f8:	2a 94       	dec	r2
 4fa:	21 e0       	ldi	r18, 0x01	; 1
 4fc:	82 1a       	sub	r8, r18
 4fe:	91 08       	sbc	r9, r1
 500:	81 14       	cp	r8, r1
 502:	91 04       	cpc	r9, r1
 504:	79 f7       	brne	.-34     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 506:	e1 c0       	rjmp	.+450    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 508:	84 36       	cpi	r24, 0x64	; 100
 50a:	11 f0       	breq	.+4      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50c:	89 36       	cpi	r24, 0x69	; 105
 50e:	39 f5       	brne	.+78     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 510:	f8 01       	movw	r30, r16
 512:	37 fe       	sbrs	r3, 7
 514:	07 c0       	rjmp	.+14     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 516:	60 81       	ld	r22, Z
 518:	71 81       	ldd	r23, Z+1	; 0x01
 51a:	82 81       	ldd	r24, Z+2	; 0x02
 51c:	93 81       	ldd	r25, Z+3	; 0x03
 51e:	0c 5f       	subi	r16, 0xFC	; 252
 520:	1f 4f       	sbci	r17, 0xFF	; 255
 522:	08 c0       	rjmp	.+16     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 524:	60 81       	ld	r22, Z
 526:	71 81       	ldd	r23, Z+1	; 0x01
 528:	07 2e       	mov	r0, r23
 52a:	00 0c       	add	r0, r0
 52c:	88 0b       	sbc	r24, r24
 52e:	99 0b       	sbc	r25, r25
 530:	0e 5f       	subi	r16, 0xFE	; 254
 532:	1f 4f       	sbci	r17, 0xFF	; 255
 534:	f3 2d       	mov	r31, r3
 536:	ff 76       	andi	r31, 0x6F	; 111
 538:	3f 2e       	mov	r3, r31
 53a:	97 ff       	sbrs	r25, 7
 53c:	09 c0       	rjmp	.+18     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 53e:	90 95       	com	r25
 540:	80 95       	com	r24
 542:	70 95       	com	r23
 544:	61 95       	neg	r22
 546:	7f 4f       	sbci	r23, 0xFF	; 255
 548:	8f 4f       	sbci	r24, 0xFF	; 255
 54a:	9f 4f       	sbci	r25, 0xFF	; 255
 54c:	f0 68       	ori	r31, 0x80	; 128
 54e:	3f 2e       	mov	r3, r31
 550:	2a e0       	ldi	r18, 0x0A	; 10
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	a3 01       	movw	r20, r6
 556:	33 d1       	rcall	.+614    	; 0x7be <__ultoa_invert>
 558:	88 2e       	mov	r8, r24
 55a:	86 18       	sub	r8, r6
 55c:	44 c0       	rjmp	.+136    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 55e:	85 37       	cpi	r24, 0x75	; 117
 560:	31 f4       	brne	.+12     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 562:	23 2d       	mov	r18, r3
 564:	2f 7e       	andi	r18, 0xEF	; 239
 566:	b2 2e       	mov	r11, r18
 568:	2a e0       	ldi	r18, 0x0A	; 10
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	25 c0       	rjmp	.+74     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 56e:	93 2d       	mov	r25, r3
 570:	99 7f       	andi	r25, 0xF9	; 249
 572:	b9 2e       	mov	r11, r25
 574:	8f 36       	cpi	r24, 0x6F	; 111
 576:	c1 f0       	breq	.+48     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 578:	18 f4       	brcc	.+6      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57a:	88 35       	cpi	r24, 0x58	; 88
 57c:	79 f0       	breq	.+30     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 57e:	ae c0       	rjmp	.+348    	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 580:	80 37       	cpi	r24, 0x70	; 112
 582:	19 f0       	breq	.+6      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 584:	88 37       	cpi	r24, 0x78	; 120
 586:	21 f0       	breq	.+8      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 588:	a9 c0       	rjmp	.+338    	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 58a:	e9 2f       	mov	r30, r25
 58c:	e0 61       	ori	r30, 0x10	; 16
 58e:	be 2e       	mov	r11, r30
 590:	b4 fe       	sbrs	r11, 4
 592:	0d c0       	rjmp	.+26     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 594:	fb 2d       	mov	r31, r11
 596:	f4 60       	ori	r31, 0x04	; 4
 598:	bf 2e       	mov	r11, r31
 59a:	09 c0       	rjmp	.+18     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 59c:	34 fe       	sbrs	r3, 4
 59e:	0a c0       	rjmp	.+20     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a0:	29 2f       	mov	r18, r25
 5a2:	26 60       	ori	r18, 0x06	; 6
 5a4:	b2 2e       	mov	r11, r18
 5a6:	06 c0       	rjmp	.+12     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a8:	28 e0       	ldi	r18, 0x08	; 8
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5ae:	20 e1       	ldi	r18, 0x10	; 16
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5b4:	20 e1       	ldi	r18, 0x10	; 16
 5b6:	32 e0       	ldi	r19, 0x02	; 2
 5b8:	f8 01       	movw	r30, r16
 5ba:	b7 fe       	sbrs	r11, 7
 5bc:	07 c0       	rjmp	.+14     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	82 81       	ldd	r24, Z+2	; 0x02
 5c4:	93 81       	ldd	r25, Z+3	; 0x03
 5c6:	0c 5f       	subi	r16, 0xFC	; 252
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5cc:	60 81       	ld	r22, Z
 5ce:	71 81       	ldd	r23, Z+1	; 0x01
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 5f       	subi	r16, 0xFE	; 254
 5d6:	1f 4f       	sbci	r17, 0xFF	; 255
 5d8:	a3 01       	movw	r20, r6
 5da:	f1 d0       	rcall	.+482    	; 0x7be <__ultoa_invert>
 5dc:	88 2e       	mov	r8, r24
 5de:	86 18       	sub	r8, r6
 5e0:	fb 2d       	mov	r31, r11
 5e2:	ff 77       	andi	r31, 0x7F	; 127
 5e4:	3f 2e       	mov	r3, r31
 5e6:	36 fe       	sbrs	r3, 6
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ea:	23 2d       	mov	r18, r3
 5ec:	2e 7f       	andi	r18, 0xFE	; 254
 5ee:	a2 2e       	mov	r10, r18
 5f0:	89 14       	cp	r8, r9
 5f2:	58 f4       	brcc	.+22     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f4:	34 fe       	sbrs	r3, 4
 5f6:	0b c0       	rjmp	.+22     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f8:	32 fc       	sbrc	r3, 2
 5fa:	09 c0       	rjmp	.+18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5fc:	83 2d       	mov	r24, r3
 5fe:	8e 7e       	andi	r24, 0xEE	; 238
 600:	a8 2e       	mov	r10, r24
 602:	05 c0       	rjmp	.+10     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 604:	b8 2c       	mov	r11, r8
 606:	a3 2c       	mov	r10, r3
 608:	03 c0       	rjmp	.+6      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60a:	b8 2c       	mov	r11, r8
 60c:	01 c0       	rjmp	.+2      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60e:	b9 2c       	mov	r11, r9
 610:	a4 fe       	sbrs	r10, 4
 612:	0f c0       	rjmp	.+30     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 614:	fe 01       	movw	r30, r28
 616:	e8 0d       	add	r30, r8
 618:	f1 1d       	adc	r31, r1
 61a:	80 81       	ld	r24, Z
 61c:	80 33       	cpi	r24, 0x30	; 48
 61e:	21 f4       	brne	.+8      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 620:	9a 2d       	mov	r25, r10
 622:	99 7e       	andi	r25, 0xE9	; 233
 624:	a9 2e       	mov	r10, r25
 626:	09 c0       	rjmp	.+18     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 628:	a2 fe       	sbrs	r10, 2
 62a:	06 c0       	rjmp	.+12     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 62c:	b3 94       	inc	r11
 62e:	b3 94       	inc	r11
 630:	04 c0       	rjmp	.+8      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 632:	8a 2d       	mov	r24, r10
 634:	86 78       	andi	r24, 0x86	; 134
 636:	09 f0       	breq	.+2      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 638:	b3 94       	inc	r11
 63a:	a3 fc       	sbrc	r10, 3
 63c:	10 c0       	rjmp	.+32     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 63e:	a0 fe       	sbrs	r10, 0
 640:	06 c0       	rjmp	.+12     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 642:	b2 14       	cp	r11, r2
 644:	80 f4       	brcc	.+32     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 646:	28 0c       	add	r2, r8
 648:	92 2c       	mov	r9, r2
 64a:	9b 18       	sub	r9, r11
 64c:	0d c0       	rjmp	.+26     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 64e:	b2 14       	cp	r11, r2
 650:	58 f4       	brcc	.+22     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 652:	b6 01       	movw	r22, r12
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	76 d0       	rcall	.+236    	; 0x746 <fputc>
 65a:	b3 94       	inc	r11
 65c:	f8 cf       	rjmp	.-16     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 65e:	b2 14       	cp	r11, r2
 660:	18 f4       	brcc	.+6      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 662:	2b 18       	sub	r2, r11
 664:	02 c0       	rjmp	.+4      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 666:	98 2c       	mov	r9, r8
 668:	21 2c       	mov	r2, r1
 66a:	a4 fe       	sbrs	r10, 4
 66c:	0f c0       	rjmp	.+30     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 66e:	b6 01       	movw	r22, r12
 670:	80 e3       	ldi	r24, 0x30	; 48
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	68 d0       	rcall	.+208    	; 0x746 <fputc>
 676:	a2 fe       	sbrs	r10, 2
 678:	16 c0       	rjmp	.+44     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 67a:	a1 fc       	sbrc	r10, 1
 67c:	03 c0       	rjmp	.+6      	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 67e:	88 e7       	ldi	r24, 0x78	; 120
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	02 c0       	rjmp	.+4      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 684:	88 e5       	ldi	r24, 0x58	; 88
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	b6 01       	movw	r22, r12
 68a:	0c c0       	rjmp	.+24     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 68c:	8a 2d       	mov	r24, r10
 68e:	86 78       	andi	r24, 0x86	; 134
 690:	51 f0       	breq	.+20     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 692:	a1 fe       	sbrs	r10, 1
 694:	02 c0       	rjmp	.+4      	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 696:	8b e2       	ldi	r24, 0x2B	; 43
 698:	01 c0       	rjmp	.+2      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 69a:	80 e2       	ldi	r24, 0x20	; 32
 69c:	a7 fc       	sbrc	r10, 7
 69e:	8d e2       	ldi	r24, 0x2D	; 45
 6a0:	b6 01       	movw	r22, r12
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	50 d0       	rcall	.+160    	; 0x746 <fputc>
 6a6:	89 14       	cp	r8, r9
 6a8:	30 f4       	brcc	.+12     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e3       	ldi	r24, 0x30	; 48
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	4a d0       	rcall	.+148    	; 0x746 <fputc>
 6b2:	9a 94       	dec	r9
 6b4:	f8 cf       	rjmp	.-16     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6b6:	8a 94       	dec	r8
 6b8:	f3 01       	movw	r30, r6
 6ba:	e8 0d       	add	r30, r8
 6bc:	f1 1d       	adc	r31, r1
 6be:	80 81       	ld	r24, Z
 6c0:	b6 01       	movw	r22, r12
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	40 d0       	rcall	.+128    	; 0x746 <fputc>
 6c6:	81 10       	cpse	r8, r1
 6c8:	f6 cf       	rjmp	.-20     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6ca:	22 20       	and	r2, r2
 6cc:	09 f4       	brne	.+2      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ce:	4e ce       	rjmp	.-868    	; 0x36c <vfprintf+0x4c>
 6d0:	b6 01       	movw	r22, r12
 6d2:	80 e2       	ldi	r24, 0x20	; 32
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	37 d0       	rcall	.+110    	; 0x746 <fputc>
 6d8:	2a 94       	dec	r2
 6da:	f7 cf       	rjmp	.-18     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6dc:	f6 01       	movw	r30, r12
 6de:	86 81       	ldd	r24, Z+6	; 0x06
 6e0:	97 81       	ldd	r25, Z+7	; 0x07
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e4:	8f ef       	ldi	r24, 0xFF	; 255
 6e6:	9f ef       	ldi	r25, 0xFF	; 255
 6e8:	2b 96       	adiw	r28, 0x0b	; 11
 6ea:	0f b6       	in	r0, 0x3f	; 63
 6ec:	f8 94       	cli
 6ee:	de bf       	out	0x3e, r29	; 62
 6f0:	0f be       	out	0x3f, r0	; 63
 6f2:	cd bf       	out	0x3d, r28	; 61
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	1f 91       	pop	r17
 6fa:	0f 91       	pop	r16
 6fc:	ff 90       	pop	r15
 6fe:	ef 90       	pop	r14
 700:	df 90       	pop	r13
 702:	cf 90       	pop	r12
 704:	bf 90       	pop	r11
 706:	af 90       	pop	r10
 708:	9f 90       	pop	r9
 70a:	8f 90       	pop	r8
 70c:	7f 90       	pop	r7
 70e:	6f 90       	pop	r6
 710:	5f 90       	pop	r5
 712:	4f 90       	pop	r4
 714:	3f 90       	pop	r3
 716:	2f 90       	pop	r2
 718:	08 95       	ret

0000071a <strnlen_P>:
 71a:	fc 01       	movw	r30, r24
 71c:	05 90       	lpm	r0, Z+
 71e:	61 50       	subi	r22, 0x01	; 1
 720:	70 40       	sbci	r23, 0x00	; 0
 722:	01 10       	cpse	r0, r1
 724:	d8 f7       	brcc	.-10     	; 0x71c <strnlen_P+0x2>
 726:	80 95       	com	r24
 728:	90 95       	com	r25
 72a:	8e 0f       	add	r24, r30
 72c:	9f 1f       	adc	r25, r31
 72e:	08 95       	ret

00000730 <strnlen>:
 730:	fc 01       	movw	r30, r24
 732:	61 50       	subi	r22, 0x01	; 1
 734:	70 40       	sbci	r23, 0x00	; 0
 736:	01 90       	ld	r0, Z+
 738:	01 10       	cpse	r0, r1
 73a:	d8 f7       	brcc	.-10     	; 0x732 <strnlen+0x2>
 73c:	80 95       	com	r24
 73e:	90 95       	com	r25
 740:	8e 0f       	add	r24, r30
 742:	9f 1f       	adc	r25, r31
 744:	08 95       	ret

00000746 <fputc>:
 746:	0f 93       	push	r16
 748:	1f 93       	push	r17
 74a:	cf 93       	push	r28
 74c:	df 93       	push	r29
 74e:	fb 01       	movw	r30, r22
 750:	23 81       	ldd	r18, Z+3	; 0x03
 752:	21 fd       	sbrc	r18, 1
 754:	03 c0       	rjmp	.+6      	; 0x75c <fputc+0x16>
 756:	8f ef       	ldi	r24, 0xFF	; 255
 758:	9f ef       	ldi	r25, 0xFF	; 255
 75a:	2c c0       	rjmp	.+88     	; 0x7b4 <fputc+0x6e>
 75c:	22 ff       	sbrs	r18, 2
 75e:	16 c0       	rjmp	.+44     	; 0x78c <fputc+0x46>
 760:	46 81       	ldd	r20, Z+6	; 0x06
 762:	57 81       	ldd	r21, Z+7	; 0x07
 764:	24 81       	ldd	r18, Z+4	; 0x04
 766:	35 81       	ldd	r19, Z+5	; 0x05
 768:	42 17       	cp	r20, r18
 76a:	53 07       	cpc	r21, r19
 76c:	44 f4       	brge	.+16     	; 0x77e <fputc+0x38>
 76e:	a0 81       	ld	r26, Z
 770:	b1 81       	ldd	r27, Z+1	; 0x01
 772:	9d 01       	movw	r18, r26
 774:	2f 5f       	subi	r18, 0xFF	; 255
 776:	3f 4f       	sbci	r19, 0xFF	; 255
 778:	31 83       	std	Z+1, r19	; 0x01
 77a:	20 83       	st	Z, r18
 77c:	8c 93       	st	X, r24
 77e:	26 81       	ldd	r18, Z+6	; 0x06
 780:	37 81       	ldd	r19, Z+7	; 0x07
 782:	2f 5f       	subi	r18, 0xFF	; 255
 784:	3f 4f       	sbci	r19, 0xFF	; 255
 786:	37 83       	std	Z+7, r19	; 0x07
 788:	26 83       	std	Z+6, r18	; 0x06
 78a:	14 c0       	rjmp	.+40     	; 0x7b4 <fputc+0x6e>
 78c:	8b 01       	movw	r16, r22
 78e:	ec 01       	movw	r28, r24
 790:	fb 01       	movw	r30, r22
 792:	00 84       	ldd	r0, Z+8	; 0x08
 794:	f1 85       	ldd	r31, Z+9	; 0x09
 796:	e0 2d       	mov	r30, r0
 798:	09 95       	icall
 79a:	89 2b       	or	r24, r25
 79c:	e1 f6       	brne	.-72     	; 0x756 <fputc+0x10>
 79e:	d8 01       	movw	r26, r16
 7a0:	16 96       	adiw	r26, 0x06	; 6
 7a2:	8d 91       	ld	r24, X+
 7a4:	9c 91       	ld	r25, X
 7a6:	17 97       	sbiw	r26, 0x07	; 7
 7a8:	01 96       	adiw	r24, 0x01	; 1
 7aa:	17 96       	adiw	r26, 0x07	; 7
 7ac:	9c 93       	st	X, r25
 7ae:	8e 93       	st	-X, r24
 7b0:	16 97       	sbiw	r26, 0x06	; 6
 7b2:	ce 01       	movw	r24, r28
 7b4:	df 91       	pop	r29
 7b6:	cf 91       	pop	r28
 7b8:	1f 91       	pop	r17
 7ba:	0f 91       	pop	r16
 7bc:	08 95       	ret

000007be <__ultoa_invert>:
 7be:	fa 01       	movw	r30, r20
 7c0:	aa 27       	eor	r26, r26
 7c2:	28 30       	cpi	r18, 0x08	; 8
 7c4:	51 f1       	breq	.+84     	; 0x81a <__ultoa_invert+0x5c>
 7c6:	20 31       	cpi	r18, 0x10	; 16
 7c8:	81 f1       	breq	.+96     	; 0x82a <__ultoa_invert+0x6c>
 7ca:	e8 94       	clt
 7cc:	6f 93       	push	r22
 7ce:	6e 7f       	andi	r22, 0xFE	; 254
 7d0:	6e 5f       	subi	r22, 0xFE	; 254
 7d2:	7f 4f       	sbci	r23, 0xFF	; 255
 7d4:	8f 4f       	sbci	r24, 0xFF	; 255
 7d6:	9f 4f       	sbci	r25, 0xFF	; 255
 7d8:	af 4f       	sbci	r26, 0xFF	; 255
 7da:	b1 e0       	ldi	r27, 0x01	; 1
 7dc:	3e d0       	rcall	.+124    	; 0x85a <__ultoa_invert+0x9c>
 7de:	b4 e0       	ldi	r27, 0x04	; 4
 7e0:	3c d0       	rcall	.+120    	; 0x85a <__ultoa_invert+0x9c>
 7e2:	67 0f       	add	r22, r23
 7e4:	78 1f       	adc	r23, r24
 7e6:	89 1f       	adc	r24, r25
 7e8:	9a 1f       	adc	r25, r26
 7ea:	a1 1d       	adc	r26, r1
 7ec:	68 0f       	add	r22, r24
 7ee:	79 1f       	adc	r23, r25
 7f0:	8a 1f       	adc	r24, r26
 7f2:	91 1d       	adc	r25, r1
 7f4:	a1 1d       	adc	r26, r1
 7f6:	6a 0f       	add	r22, r26
 7f8:	71 1d       	adc	r23, r1
 7fa:	81 1d       	adc	r24, r1
 7fc:	91 1d       	adc	r25, r1
 7fe:	a1 1d       	adc	r26, r1
 800:	20 d0       	rcall	.+64     	; 0x842 <__ultoa_invert+0x84>
 802:	09 f4       	brne	.+2      	; 0x806 <__ultoa_invert+0x48>
 804:	68 94       	set
 806:	3f 91       	pop	r19
 808:	2a e0       	ldi	r18, 0x0A	; 10
 80a:	26 9f       	mul	r18, r22
 80c:	11 24       	eor	r1, r1
 80e:	30 19       	sub	r19, r0
 810:	30 5d       	subi	r19, 0xD0	; 208
 812:	31 93       	st	Z+, r19
 814:	de f6       	brtc	.-74     	; 0x7cc <__ultoa_invert+0xe>
 816:	cf 01       	movw	r24, r30
 818:	08 95       	ret
 81a:	46 2f       	mov	r20, r22
 81c:	47 70       	andi	r20, 0x07	; 7
 81e:	40 5d       	subi	r20, 0xD0	; 208
 820:	41 93       	st	Z+, r20
 822:	b3 e0       	ldi	r27, 0x03	; 3
 824:	0f d0       	rcall	.+30     	; 0x844 <__ultoa_invert+0x86>
 826:	c9 f7       	brne	.-14     	; 0x81a <__ultoa_invert+0x5c>
 828:	f6 cf       	rjmp	.-20     	; 0x816 <__ultoa_invert+0x58>
 82a:	46 2f       	mov	r20, r22
 82c:	4f 70       	andi	r20, 0x0F	; 15
 82e:	40 5d       	subi	r20, 0xD0	; 208
 830:	4a 33       	cpi	r20, 0x3A	; 58
 832:	18 f0       	brcs	.+6      	; 0x83a <__ultoa_invert+0x7c>
 834:	49 5d       	subi	r20, 0xD9	; 217
 836:	31 fd       	sbrc	r19, 1
 838:	40 52       	subi	r20, 0x20	; 32
 83a:	41 93       	st	Z+, r20
 83c:	02 d0       	rcall	.+4      	; 0x842 <__ultoa_invert+0x84>
 83e:	a9 f7       	brne	.-22     	; 0x82a <__ultoa_invert+0x6c>
 840:	ea cf       	rjmp	.-44     	; 0x816 <__ultoa_invert+0x58>
 842:	b4 e0       	ldi	r27, 0x04	; 4
 844:	a6 95       	lsr	r26
 846:	97 95       	ror	r25
 848:	87 95       	ror	r24
 84a:	77 95       	ror	r23
 84c:	67 95       	ror	r22
 84e:	ba 95       	dec	r27
 850:	c9 f7       	brne	.-14     	; 0x844 <__ultoa_invert+0x86>
 852:	00 97       	sbiw	r24, 0x00	; 0
 854:	61 05       	cpc	r22, r1
 856:	71 05       	cpc	r23, r1
 858:	08 95       	ret
 85a:	9b 01       	movw	r18, r22
 85c:	ac 01       	movw	r20, r24
 85e:	0a 2e       	mov	r0, r26
 860:	06 94       	lsr	r0
 862:	57 95       	ror	r21
 864:	47 95       	ror	r20
 866:	37 95       	ror	r19
 868:	27 95       	ror	r18
 86a:	ba 95       	dec	r27
 86c:	c9 f7       	brne	.-14     	; 0x860 <__ultoa_invert+0xa2>
 86e:	62 0f       	add	r22, r18
 870:	73 1f       	adc	r23, r19
 872:	84 1f       	adc	r24, r20
 874:	95 1f       	adc	r25, r21
 876:	a0 1d       	adc	r26, r0
 878:	08 95       	ret

0000087a <_exit>:
 87a:	f8 94       	cli

0000087c <__stop_program>:
 87c:	ff cf       	rjmp	.-2      	; 0x87c <__stop_program>
